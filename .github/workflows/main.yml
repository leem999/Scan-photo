name: Android CI
on:
  workflow_dispatch:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Install SDK components
        run: |
          sdkmanager --install "platforms;android-35" "build-tools;35.0.0" "platform-tools"
          yes | sdkmanager --licenses

      - name: Setup Gradle (no cache)
        uses: gradle/actions/setup-gradle@v3
        with:
          cache-disabled: true

      # ---- 1) 检查是否已有 wrapper ----
      - name: Detect wrapper
        id: detect
        shell: bash
        run: |
          if [ -x "./gradlew" ] && [ -f "./gradle/wrapper/gradle-wrapper.jar" ]; then
            echo "need_wrap=no" >> "$GITHUB_OUTPUT"
          else
            echo "need_wrap=yes" >> "$GITHUB_OUTPUT"
          fi

      # ---- 2) 如缺失，则下载 Gradle 并生成 wrapper（分成三步，避免多行脚本） ----
      - name: Download Gradle 8.8 (with retries)
        if: steps.detect.outputs.need_wrap == 'yes'
        shell: bash
        run: curl -L --fail --retry 6 --retry-all-errors --connect-timeout 20 --max-time 300 \
             -o /tmp/gradle.zip https://services.gradle.org/distributions/gradle-8.8-bin.zip

      - name: Unzip Gradle
        if: steps.detect.outputs.need_wrap == 'yes'
        shell: bash
        run: unzip -q /tmp/gradle.zip -d /tmp

      - name: Generate Gradle Wrapper
        if: steps.detect.outputs.need_wrap == 'yes'
        shell: bash
        run: /tmp/gradle-8.8/bin/gradle wrapper --gradle-version 8.8

      - name: Make gradlew executable
        shell: bash
        run: chmod +x ./gradlew

      # ---- 3) 编译，并把日志保存成工件（方便排错） ----
      - name: Build Debug APK
        shell: bash
        run: |
          set -o pipefail
          run: ./gradlew --no-daemon --no-parallel --max-workers=2 -Dorg.gradle.jvmargs="-Xmx1024m -Dfile.encoding=UTF-8" --stacktrace --info clean assembleDebug | tee build.log

      - name: Upload build log (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: build.log
          path: build.log

      - name: Upload APK
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: app-debug.apk
          path: app/build/outputs/apk/debug/app-debug.apk
